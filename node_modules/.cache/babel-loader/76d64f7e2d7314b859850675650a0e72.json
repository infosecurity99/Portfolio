{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\fastfooduz-master\\\\src\\\\components\\\\Katalog\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader, Autocomplete, Polygon } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places'];\nexport const Katalog = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const [place, setPlace] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 41.2995,\n    lng: 69.2401\n  });\n  const {\n    REACT_APP_MAP_KEY: mapKey\n  } = process.env;\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: mapKey,\n    id: 'fastfood',\n    libraries\n  });\n\n  const onPlaceChanged = e => {\n    var _place$getPlace, _place$getPlace$geome, _place$getPlace$geome2, _place$getPlace2, _place$getPlace2$geom, _place$getPlace2$geom2, _place$getPlace3, _place$getPlace3$geom, _place$getPlace3$geom2, _place$getPlace4, _place$getPlace4$geom, _place$getPlace4$geom2;\n\n    console.log(place === null || place === void 0 ? void 0 : place.getPlace());\n    console.log(place === null || place === void 0 ? void 0 : (_place$getPlace = place.getPlace()) === null || _place$getPlace === void 0 ? void 0 : (_place$getPlace$geome = _place$getPlace.geometry) === null || _place$getPlace$geome === void 0 ? void 0 : (_place$getPlace$geome2 = _place$getPlace$geome.location) === null || _place$getPlace$geome2 === void 0 ? void 0 : _place$getPlace$geome2.lat());\n    console.log(place === null || place === void 0 ? void 0 : (_place$getPlace2 = place.getPlace()) === null || _place$getPlace2 === void 0 ? void 0 : (_place$getPlace2$geom = _place$getPlace2.geometry) === null || _place$getPlace2$geom === void 0 ? void 0 : (_place$getPlace2$geom2 = _place$getPlace2$geom.location) === null || _place$getPlace2$geom2 === void 0 ? void 0 : _place$getPlace2$geom2.lng());\n    setCenter({\n      lat: place === null || place === void 0 ? void 0 : (_place$getPlace3 = place.getPlace()) === null || _place$getPlace3 === void 0 ? void 0 : (_place$getPlace3$geom = _place$getPlace3.geometry) === null || _place$getPlace3$geom === void 0 ? void 0 : (_place$getPlace3$geom2 = _place$getPlace3$geom.location) === null || _place$getPlace3$geom2 === void 0 ? void 0 : _place$getPlace3$geom2.lat(),\n      lng: place === null || place === void 0 ? void 0 : (_place$getPlace4 = place.getPlace()) === null || _place$getPlace4 === void 0 ? void 0 : (_place$getPlace4$geom = _place$getPlace4.geometry) === null || _place$getPlace4$geom === void 0 ? void 0 : (_place$getPlace4$geom2 = _place$getPlace4$geom.location) === null || _place$getPlace4$geom2 === void 0 ? void 0 : _place$getPlace4$geom2.lng()\n    });\n  };\n\n  const paths = [{\n    lat: 25.774,\n    lng: -80.19\n  }, {\n    lat: 18.466,\n    lng: -66.118\n  }, {\n    lat: 32.321,\n    lng: -64.757\n  }, {\n    lat: 25.774,\n    lng: -80.19\n  }, {\n    lat: 24.774,\n    lng: -80.19\n  }, {\n    lat: 23.774,\n    lng: -80.19\n  }];\n  const options = {\n    fillColor: 'lightblue',\n    fillOpacity: 1,\n    strokeColor: 'red',\n    strokeOpacity: 1,\n    strokeWeight: 2,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    geodesic: false,\n    zIndex: 1\n  };\n\n  const onLoad = polygon => {\n    console.log('polygon: ', polygon);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      onLoad: e => setPlace(e),\n      onPlaceChanged: onPlaceChanged,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          height: '28px',\n          outline: 'none',\n          position: 'absolute',\n          zIndex: '1',\n          top: '10px'\n        },\n        placeholder: \"enter palce ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"fastfood\",\n      zoom: 12,\n      center: center,\n      mapContainerStyle: {\n        width: '1234px',\n        height: '756px',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Polygon, {\n        onLoad: onLoad,\n        paths: paths,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Katalog, \"rT+oQMmnN8bzZuP2M/LF4bzOLC4=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Katalog;\nexport default Katalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Katalog\");","map":{"version":3,"sources":["C:/Users/Hp/Desktop/fastfooduz-master/src/components/Katalog/index.jsx"],"names":["React","useState","GoogleMap","Marker","useJsApiLoader","Autocomplete","Polygon","libraries","Katalog","location","place","setPlace","center","setCenter","lat","lng","REACT_APP_MAP_KEY","mapKey","process","env","isLoaded","googleMapsApiKey","id","onPlaceChanged","e","console","log","getPlace","geometry","paths","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","onLoad","polygon","margin","height","outline","position","top","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  GoogleMap,\n  Marker,\n  useJsApiLoader,\n  Autocomplete,\n  Polygon,\n} from '@react-google-maps/api';\n\nconst libraries = ['places'];\nexport const Katalog = ({ location }) => {\n  const [place, setPlace] = useState(null);\n  const [center, setCenter] = useState({ lat: 41.2995, lng: 69.2401 });\n\n  const { REACT_APP_MAP_KEY: mapKey } = process.env;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: mapKey,\n    id: 'fastfood',\n    libraries,\n  });\n  const onPlaceChanged = (e) => {\n    console.log(place?.getPlace());\n    console.log(place?.getPlace()?.geometry?.location?.lat());\n    console.log(place?.getPlace()?.geometry?.location?.lng());\n    setCenter({\n      lat: place?.getPlace()?.geometry?.location?.lat(),\n      lng: place?.getPlace()?.geometry?.location?.lng(),\n    });\n  };\n\n  const paths = [\n    { lat: 25.774, lng: -80.19 },\n    { lat: 18.466, lng: -66.118 },\n    { lat: 32.321, lng: -64.757 },\n    { lat: 25.774, lng: -80.19 },\n    { lat: 24.774, lng: -80.19 },\n    { lat: 23.774, lng: -80.19 },\n  ];\n\n  const options = {\n    fillColor: 'lightblue',\n    fillOpacity: 1,\n    strokeColor: 'red',\n    strokeOpacity: 1,\n    strokeWeight: 2,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    geodesic: false,\n    zIndex: 1,\n  };\n\n  const onLoad = (polygon) => {\n    console.log('polygon: ', polygon);\n  };\n  return (\n    <div  style={{margin:'auto'}}>\n      <Autocomplete onLoad={(e) => setPlace(e)} onPlaceChanged={onPlaceChanged}>\n      <input type='text'   style={{height:'28px', outline:'none',position:'absolute',zIndex:'1',top:'10px'}}  placeholder='enter palce ...'/>\n      </Autocomplete>\n      {isLoaded && (\n        <GoogleMap  \n          id='fastfood'\n          zoom={12}\n          center={center}\n          mapContainerStyle={{\n            width: '1234px',\n            height: '756px',\n            position:'relative'\n          }}\n        >\n     \n          <Marker position={center} />\n          <Polygon onLoad={onLoad} paths={paths} options={options} />\n        </GoogleMap>\n      )}\n    </div>\n  );\n};\n\nexport default Katalog;\n"]},"metadata":{},"sourceType":"module"}