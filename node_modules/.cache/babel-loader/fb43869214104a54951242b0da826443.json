{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hp\\\\Desktop\\\\10fast-food\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from'react';import{GoogleMap,Marker,useJsApiLoader,Autocomplete,Polygon}from'@react-google-maps/api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var libraries=['places'];export var Katalog=function Katalog(_ref){var location=_ref.location;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),place=_useState2[0],setPlace=_useState2[1];var _useState3=useState({lat:37.827149,lng:67.585916}),_useState4=_slicedToArray(_useState3,2),center=_useState4[0],setCenter=_useState4[1];var mapKey=process.env.REACT_APP_MAP_KEY;var _useJsApiLoader=useJsApiLoader({googleMapsApiKey:mapKey,id:'fastfood',libraries:libraries}),isLoaded=_useJsApiLoader.isLoaded;var onPlaceChanged=function onPlaceChanged(e){var _place$getPlace,_place$getPlace$geome,_place$getPlace$geome2,_place$getPlace2,_place$getPlace2$geom,_place$getPlace2$geom2,_place$getPlace3,_place$getPlace3$geom,_place$getPlace3$geom2,_place$getPlace4,_place$getPlace4$geom,_place$getPlace4$geom2;console.log(place===null||place===void 0?void 0:place.getPlace());console.log(place===null||place===void 0?void 0:(_place$getPlace=place.getPlace())===null||_place$getPlace===void 0?void 0:(_place$getPlace$geome=_place$getPlace.geometry)===null||_place$getPlace$geome===void 0?void 0:(_place$getPlace$geome2=_place$getPlace$geome.location)===null||_place$getPlace$geome2===void 0?void 0:_place$getPlace$geome2.lat());console.log(place===null||place===void 0?void 0:(_place$getPlace2=place.getPlace())===null||_place$getPlace2===void 0?void 0:(_place$getPlace2$geom=_place$getPlace2.geometry)===null||_place$getPlace2$geom===void 0?void 0:(_place$getPlace2$geom2=_place$getPlace2$geom.location)===null||_place$getPlace2$geom2===void 0?void 0:_place$getPlace2$geom2.lng());setCenter({lat:place===null||place===void 0?void 0:(_place$getPlace3=place.getPlace())===null||_place$getPlace3===void 0?void 0:(_place$getPlace3$geom=_place$getPlace3.geometry)===null||_place$getPlace3$geom===void 0?void 0:(_place$getPlace3$geom2=_place$getPlace3$geom.location)===null||_place$getPlace3$geom2===void 0?void 0:_place$getPlace3$geom2.lat(),lng:place===null||place===void 0?void 0:(_place$getPlace4=place.getPlace())===null||_place$getPlace4===void 0?void 0:(_place$getPlace4$geom=_place$getPlace4.geometry)===null||_place$getPlace4$geom===void 0?void 0:(_place$getPlace4$geom2=_place$getPlace4$geom.location)===null||_place$getPlace4$geom2===void 0?void 0:_place$getPlace4$geom2.lng()});};var paths=[{lat:25.774,lng:-80.19},{lat:18.466,lng:-66.118},{lat:32.321,lng:-64.757},{lat:25.774,lng:-80.19},{lat:24.774,lng:-80.19},{lat:23.774,lng:-80.19}];var options={fillColor:'lightblue',fillOpacity:1,strokeColor:'red',strokeOpacity:1,strokeWeight:2,clickable:false,draggable:false,editable:false,geodesic:false,zIndex:1};var onLoad=function onLoad(polygon){console.log('polygon: ',polygon);};return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'auto'},children:[/*#__PURE__*/_jsx(Autocomplete,{onLoad:function onLoad(e){return setPlace(e);},onPlaceChanged:onPlaceChanged,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",style:{height:'33px',width:'200px',outline:'none',position:'absolute',zIndex:'1',top:'20px',border:'none',left:'520px',textIndent:'20px'},placeholder:\"enter palce ...\"})}),isLoaded&&/*#__PURE__*/_jsxs(GoogleMap,{id:\"fastfood\",zoom:12,center:center,mapContainerStyle:{width:'1234px',height:'774px',position:'relative'},children:[/*#__PURE__*/_jsx(Marker,{position:center}),/*#__PURE__*/_jsx(Polygon,{onLoad:onLoad,paths:paths,options:options})]})]});};export default Katalog;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/10fast-food/src/components/Katalog/index.jsx"],"names":["React","useState","GoogleMap","Marker","useJsApiLoader","Autocomplete","Polygon","libraries","Katalog","location","place","setPlace","lat","lng","center","setCenter","mapKey","process","env","REACT_APP_MAP_KEY","googleMapsApiKey","id","isLoaded","onPlaceChanged","e","console","log","getPlace","geometry","paths","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","onLoad","polygon","margin","height","width","outline","position","top","border","left","textIndent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  GoogleMap,\n  Marker,\n  useJsApiLoader,\n  Autocomplete,\n  Polygon,\n} from '@react-google-maps/api';\n\nconst libraries = ['places'];\nexport const Katalog = ({ location }) => {\n  const [place, setPlace] = useState(null);\n  const [center, setCenter] = useState({ lat: 37.827149, lng: 67.585916 });\n\n  const { REACT_APP_MAP_KEY: mapKey } = process.env;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: mapKey,\n    id: 'fastfood',\n    libraries,\n  });\n  const onPlaceChanged = (e) => {\n    console.log(place?.getPlace());\n    console.log(place?.getPlace()?.geometry?.location?.lat());\n    console.log(place?.getPlace()?.geometry?.location?.lng());\n    setCenter({\n      lat: place?.getPlace()?.geometry?.location?.lat(),\n      lng: place?.getPlace()?.geometry?.location?.lng(),\n    });\n  };\n\n  const paths = [\n    { lat: 25.774, lng: -80.19 },\n    { lat: 18.466, lng: -66.118 },\n    { lat: 32.321, lng: -64.757 },\n    { lat: 25.774, lng: -80.19 },\n    { lat: 24.774, lng: -80.19 },\n    { lat: 23.774, lng: -80.19 },\n  ];\n\n  const options = {\n    fillColor: 'lightblue',\n    fillOpacity: 1,\n    strokeColor: 'red',\n    strokeOpacity: 1,\n    strokeWeight: 2,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    geodesic: false,\n    zIndex: 1,\n  };\n\n  const onLoad = (polygon) => {\n    console.log('polygon: ', polygon);\n  };\n  return (\n    <div  style={{margin:'auto'}}>\n      <Autocomplete onLoad={(e) => setPlace(e)} onPlaceChanged={onPlaceChanged}>\n      <input type='text'   style={{height:'33px',width:'200px', outline:'none',position:'absolute',zIndex:'1',top:'20px',border:'none' ,left:'520px',textIndent:'20px'}}  placeholder='enter palce ...'/>\n      </Autocomplete>\n      {isLoaded && (\n        <GoogleMap  \n          id='fastfood'\n          zoom={12}\n          center={center}\n          mapContainerStyle={{\n            width: '1234px',\n            height: '774px',\n            position:'relative'\n          }}\n        >\n     \n          <Marker position={center} />\n          <Polygon onLoad={onLoad} paths={paths} options={options} />\n        </GoogleMap>\n      )}\n    </div>\n  );\n};\n\nexport default Katalog;\n"]},"metadata":{},"sourceType":"module"}